{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "1. Perform the following operations using Python on a data set : read data\n",
        "from different formats(like csv, xls),indexing and selecting data, sort data,\n",
        "describe attributes of data, checking data types of each column. (Use\n",
        "Titanic Dataset)."
      ],
      "metadata": {
        "id": "97Qqv4queJXO"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 59,
      "metadata": {
        "id": "FcMHDiD0eDUU"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import random\n",
        "import matplotlib.pyplot as plt"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df = pd.read_csv(\"tested.csv\")\n",
        "# pd.read_excel() to read excel file\n",
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 869
        },
        "id": "Xf5gwMh9eLhz",
        "outputId": "2eaef141-44b6-414d-e583-56a74d582b5c"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     PassengerId  Survived  Pclass  \\\n",
              "0            892         0       3   \n",
              "1            893         1       3   \n",
              "2            894         0       2   \n",
              "3            895         0       3   \n",
              "4            896         1       3   \n",
              "..           ...       ...     ...   \n",
              "413         1305         0       3   \n",
              "414         1306         1       1   \n",
              "415         1307         0       3   \n",
              "416         1308         0       3   \n",
              "417         1309         0       3   \n",
              "\n",
              "                                             Name     Sex   Age  SibSp  Parch  \\\n",
              "0                                Kelly, Mr. James    male  34.5      0      0   \n",
              "1                Wilkes, Mrs. James (Ellen Needs)  female  47.0      1      0   \n",
              "2                       Myles, Mr. Thomas Francis    male  62.0      0      0   \n",
              "3                                Wirz, Mr. Albert    male  27.0      0      0   \n",
              "4    Hirvonen, Mrs. Alexander (Helga E Lindqvist)  female  22.0      1      1   \n",
              "..                                            ...     ...   ...    ...    ...   \n",
              "413                            Spector, Mr. Woolf    male   NaN      0      0   \n",
              "414                  Oliva y Ocana, Dona. Fermina  female  39.0      0      0   \n",
              "415                  Saether, Mr. Simon Sivertsen    male  38.5      0      0   \n",
              "416                           Ware, Mr. Frederick    male   NaN      0      0   \n",
              "417                      Peter, Master. Michael J    male   NaN      1      1   \n",
              "\n",
              "                 Ticket      Fare Cabin Embarked  \n",
              "0                330911    7.8292   NaN        Q  \n",
              "1                363272    7.0000   NaN        S  \n",
              "2                240276    9.6875   NaN        Q  \n",
              "3                315154    8.6625   NaN        S  \n",
              "4               3101298   12.2875   NaN        S  \n",
              "..                  ...       ...   ...      ...  \n",
              "413           A.5. 3236    8.0500   NaN        S  \n",
              "414            PC 17758  108.9000  C105        C  \n",
              "415  SOTON/O.Q. 3101262    7.2500   NaN        S  \n",
              "416              359309    8.0500   NaN        S  \n",
              "417                2668   22.3583   NaN        C  \n",
              "\n",
              "[418 rows x 12 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ae2e34c5-5984-486f-81c6-96e0a5a13f51\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>PassengerId</th>\n",
              "      <th>Survived</th>\n",
              "      <th>Pclass</th>\n",
              "      <th>Name</th>\n",
              "      <th>Sex</th>\n",
              "      <th>Age</th>\n",
              "      <th>SibSp</th>\n",
              "      <th>Parch</th>\n",
              "      <th>Ticket</th>\n",
              "      <th>Fare</th>\n",
              "      <th>Cabin</th>\n",
              "      <th>Embarked</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>892</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>Kelly, Mr. James</td>\n",
              "      <td>male</td>\n",
              "      <td>34.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>330911</td>\n",
              "      <td>7.8292</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Q</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>893</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>Wilkes, Mrs. James (Ellen Needs)</td>\n",
              "      <td>female</td>\n",
              "      <td>47.0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>363272</td>\n",
              "      <td>7.0000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>S</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>894</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>Myles, Mr. Thomas Francis</td>\n",
              "      <td>male</td>\n",
              "      <td>62.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>240276</td>\n",
              "      <td>9.6875</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Q</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>895</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>Wirz, Mr. Albert</td>\n",
              "      <td>male</td>\n",
              "      <td>27.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>315154</td>\n",
              "      <td>8.6625</td>\n",
              "      <td>NaN</td>\n",
              "      <td>S</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>896</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>Hirvonen, Mrs. Alexander (Helga E Lindqvist)</td>\n",
              "      <td>female</td>\n",
              "      <td>22.0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>3101298</td>\n",
              "      <td>12.2875</td>\n",
              "      <td>NaN</td>\n",
              "      <td>S</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>413</th>\n",
              "      <td>1305</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>Spector, Mr. Woolf</td>\n",
              "      <td>male</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>A.5. 3236</td>\n",
              "      <td>8.0500</td>\n",
              "      <td>NaN</td>\n",
              "      <td>S</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>414</th>\n",
              "      <td>1306</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>Oliva y Ocana, Dona. Fermina</td>\n",
              "      <td>female</td>\n",
              "      <td>39.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>PC 17758</td>\n",
              "      <td>108.9000</td>\n",
              "      <td>C105</td>\n",
              "      <td>C</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>415</th>\n",
              "      <td>1307</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>Saether, Mr. Simon Sivertsen</td>\n",
              "      <td>male</td>\n",
              "      <td>38.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>SOTON/O.Q. 3101262</td>\n",
              "      <td>7.2500</td>\n",
              "      <td>NaN</td>\n",
              "      <td>S</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>416</th>\n",
              "      <td>1308</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>Ware, Mr. Frederick</td>\n",
              "      <td>male</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>359309</td>\n",
              "      <td>8.0500</td>\n",
              "      <td>NaN</td>\n",
              "      <td>S</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>417</th>\n",
              "      <td>1309</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>Peter, Master. Michael J</td>\n",
              "      <td>male</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2668</td>\n",
              "      <td>22.3583</td>\n",
              "      <td>NaN</td>\n",
              "      <td>C</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>418 rows × 12 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ae2e34c5-5984-486f-81c6-96e0a5a13f51')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-ae2e34c5-5984-486f-81c6-96e0a5a13f51 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-ae2e34c5-5984-486f-81c6-96e0a5a13f51');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Indexing and Searching"
      ],
      "metadata": {
        "id": "P9lrHALQubD9"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Pandas supports 3 types of indexing \n",
        "\n",
        "# .loc[row][col] \n",
        "# for row enter index, for col enter index or name \n",
        "df.loc[1:10][\"Name\"]\n",
        "\n",
        "# [col][row] \n",
        "df[\"Name\"][0]\n",
        "df[[\"Name\", \"Age\", \"Sex\"]]\n",
        "\n",
        "# .iloc[row][col]\n",
        "df.iloc[0:10][[\"Name\", \"Age\"]]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 363
        },
        "id": "7Qte1lgHhlp-",
        "outputId": "a69619bd-550c-40de-e548-5c4ee9fc8849"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                           Name   Age\n",
              "0                              Kelly, Mr. James  34.5\n",
              "1              Wilkes, Mrs. James (Ellen Needs)  47.0\n",
              "2                     Myles, Mr. Thomas Francis  62.0\n",
              "3                              Wirz, Mr. Albert  27.0\n",
              "4  Hirvonen, Mrs. Alexander (Helga E Lindqvist)  22.0\n",
              "5                    Svensson, Mr. Johan Cervin  14.0\n",
              "6                          Connolly, Miss. Kate  30.0\n",
              "7                  Caldwell, Mr. Albert Francis  26.0\n",
              "8     Abrahim, Mrs. Joseph (Sophie Halaut Easu)  18.0\n",
              "9                       Davies, Mr. John Samuel  21.0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-609e3c66-450e-453d-8f49-a1764d80c559\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Name</th>\n",
              "      <th>Age</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Kelly, Mr. James</td>\n",
              "      <td>34.5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Wilkes, Mrs. James (Ellen Needs)</td>\n",
              "      <td>47.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Myles, Mr. Thomas Francis</td>\n",
              "      <td>62.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Wirz, Mr. Albert</td>\n",
              "      <td>27.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Hirvonen, Mrs. Alexander (Helga E Lindqvist)</td>\n",
              "      <td>22.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Svensson, Mr. Johan Cervin</td>\n",
              "      <td>14.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Connolly, Miss. Kate</td>\n",
              "      <td>30.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Caldwell, Mr. Albert Francis</td>\n",
              "      <td>26.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Abrahim, Mrs. Joseph (Sophie Halaut Easu)</td>\n",
              "      <td>18.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Davies, Mr. John Samuel</td>\n",
              "      <td>21.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-609e3c66-450e-453d-8f49-a1764d80c559')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-609e3c66-450e-453d-8f49-a1764d80c559 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-609e3c66-450e-453d-8f49-a1764d80c559');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# sorting by values in a column\n",
        "df.sort_values(\"Age\")\n",
        "\n",
        "# sort by index\n",
        "df.sort_index()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 869
        },
        "id": "Ve9Hw61luW90",
        "outputId": "2441a2f8-e311-40a3-ee6c-b3283a6e650d"
      },
      "execution_count": 32,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     PassengerId  Survived  Pclass  \\\n",
              "0            892         0       3   \n",
              "1            893         1       3   \n",
              "2            894         0       2   \n",
              "3            895         0       3   \n",
              "4            896         1       3   \n",
              "..           ...       ...     ...   \n",
              "413         1305         0       3   \n",
              "414         1306         1       1   \n",
              "415         1307         0       3   \n",
              "416         1308         0       3   \n",
              "417         1309         0       3   \n",
              "\n",
              "                                             Name     Sex   Age  SibSp  Parch  \\\n",
              "0                                Kelly, Mr. James    male  34.5      0      0   \n",
              "1                Wilkes, Mrs. James (Ellen Needs)  female  47.0      1      0   \n",
              "2                       Myles, Mr. Thomas Francis    male  62.0      0      0   \n",
              "3                                Wirz, Mr. Albert    male  27.0      0      0   \n",
              "4    Hirvonen, Mrs. Alexander (Helga E Lindqvist)  female  22.0      1      1   \n",
              "..                                            ...     ...   ...    ...    ...   \n",
              "413                            Spector, Mr. Woolf    male   NaN      0      0   \n",
              "414                  Oliva y Ocana, Dona. Fermina  female  39.0      0      0   \n",
              "415                  Saether, Mr. Simon Sivertsen    male  38.5      0      0   \n",
              "416                           Ware, Mr. Frederick    male   NaN      0      0   \n",
              "417                      Peter, Master. Michael J    male   NaN      1      1   \n",
              "\n",
              "                 Ticket      Fare Cabin Embarked  \n",
              "0                330911    7.8292   NaN        Q  \n",
              "1                363272    7.0000   NaN        S  \n",
              "2                240276    9.6875   NaN        Q  \n",
              "3                315154    8.6625   NaN        S  \n",
              "4               3101298   12.2875   NaN        S  \n",
              "..                  ...       ...   ...      ...  \n",
              "413           A.5. 3236    8.0500   NaN        S  \n",
              "414            PC 17758  108.9000  C105        C  \n",
              "415  SOTON/O.Q. 3101262    7.2500   NaN        S  \n",
              "416              359309    8.0500   NaN        S  \n",
              "417                2668   22.3583   NaN        C  \n",
              "\n",
              "[418 rows x 12 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-3983db31-7479-41c9-9589-ec7af9b4f9aa\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>PassengerId</th>\n",
              "      <th>Survived</th>\n",
              "      <th>Pclass</th>\n",
              "      <th>Name</th>\n",
              "      <th>Sex</th>\n",
              "      <th>Age</th>\n",
              "      <th>SibSp</th>\n",
              "      <th>Parch</th>\n",
              "      <th>Ticket</th>\n",
              "      <th>Fare</th>\n",
              "      <th>Cabin</th>\n",
              "      <th>Embarked</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>892</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>Kelly, Mr. James</td>\n",
              "      <td>male</td>\n",
              "      <td>34.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>330911</td>\n",
              "      <td>7.8292</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Q</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>893</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>Wilkes, Mrs. James (Ellen Needs)</td>\n",
              "      <td>female</td>\n",
              "      <td>47.0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>363272</td>\n",
              "      <td>7.0000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>S</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>894</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>Myles, Mr. Thomas Francis</td>\n",
              "      <td>male</td>\n",
              "      <td>62.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>240276</td>\n",
              "      <td>9.6875</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Q</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>895</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>Wirz, Mr. Albert</td>\n",
              "      <td>male</td>\n",
              "      <td>27.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>315154</td>\n",
              "      <td>8.6625</td>\n",
              "      <td>NaN</td>\n",
              "      <td>S</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>896</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>Hirvonen, Mrs. Alexander (Helga E Lindqvist)</td>\n",
              "      <td>female</td>\n",
              "      <td>22.0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>3101298</td>\n",
              "      <td>12.2875</td>\n",
              "      <td>NaN</td>\n",
              "      <td>S</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>413</th>\n",
              "      <td>1305</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>Spector, Mr. Woolf</td>\n",
              "      <td>male</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>A.5. 3236</td>\n",
              "      <td>8.0500</td>\n",
              "      <td>NaN</td>\n",
              "      <td>S</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>414</th>\n",
              "      <td>1306</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>Oliva y Ocana, Dona. Fermina</td>\n",
              "      <td>female</td>\n",
              "      <td>39.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>PC 17758</td>\n",
              "      <td>108.9000</td>\n",
              "      <td>C105</td>\n",
              "      <td>C</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>415</th>\n",
              "      <td>1307</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>Saether, Mr. Simon Sivertsen</td>\n",
              "      <td>male</td>\n",
              "      <td>38.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>SOTON/O.Q. 3101262</td>\n",
              "      <td>7.2500</td>\n",
              "      <td>NaN</td>\n",
              "      <td>S</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>416</th>\n",
              "      <td>1308</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>Ware, Mr. Frederick</td>\n",
              "      <td>male</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>359309</td>\n",
              "      <td>8.0500</td>\n",
              "      <td>NaN</td>\n",
              "      <td>S</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>417</th>\n",
              "      <td>1309</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>Peter, Master. Michael J</td>\n",
              "      <td>male</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2668</td>\n",
              "      <td>22.3583</td>\n",
              "      <td>NaN</td>\n",
              "      <td>C</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>418 rows × 12 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3983db31-7479-41c9-9589-ec7af9b4f9aa')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-3983db31-7479-41c9-9589-ec7af9b4f9aa button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-3983db31-7479-41c9-9589-ec7af9b4f9aa');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 32
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Describe dataframe\n",
        "df.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 364
        },
        "id": "fySdcwzzxvHj",
        "outputId": "a89257c4-947c-4fcd-f55e-d0a509e57739"
      },
      "execution_count": 33,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       PassengerId    Survived      Pclass         Age       SibSp  \\\n",
              "count   418.000000  418.000000  418.000000  332.000000  418.000000   \n",
              "mean   1100.500000    0.363636    2.265550   30.272590    0.447368   \n",
              "std     120.810458    0.481622    0.841838   14.181209    0.896760   \n",
              "min     892.000000    0.000000    1.000000    0.170000    0.000000   \n",
              "25%     996.250000    0.000000    1.000000   21.000000    0.000000   \n",
              "50%    1100.500000    0.000000    3.000000   27.000000    0.000000   \n",
              "75%    1204.750000    1.000000    3.000000   39.000000    1.000000   \n",
              "max    1309.000000    1.000000    3.000000   76.000000    8.000000   \n",
              "\n",
              "            Parch        Fare  \n",
              "count  418.000000  417.000000  \n",
              "mean     0.392344   35.627188  \n",
              "std      0.981429   55.907576  \n",
              "min      0.000000    0.000000  \n",
              "25%      0.000000    7.895800  \n",
              "50%      0.000000   14.454200  \n",
              "75%      0.000000   31.500000  \n",
              "max      9.000000  512.329200  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-80e2bf5d-9500-4c2e-9a92-b80f54e42ded\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>PassengerId</th>\n",
              "      <th>Survived</th>\n",
              "      <th>Pclass</th>\n",
              "      <th>Age</th>\n",
              "      <th>SibSp</th>\n",
              "      <th>Parch</th>\n",
              "      <th>Fare</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>418.000000</td>\n",
              "      <td>418.000000</td>\n",
              "      <td>418.000000</td>\n",
              "      <td>332.000000</td>\n",
              "      <td>418.000000</td>\n",
              "      <td>418.000000</td>\n",
              "      <td>417.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>1100.500000</td>\n",
              "      <td>0.363636</td>\n",
              "      <td>2.265550</td>\n",
              "      <td>30.272590</td>\n",
              "      <td>0.447368</td>\n",
              "      <td>0.392344</td>\n",
              "      <td>35.627188</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>120.810458</td>\n",
              "      <td>0.481622</td>\n",
              "      <td>0.841838</td>\n",
              "      <td>14.181209</td>\n",
              "      <td>0.896760</td>\n",
              "      <td>0.981429</td>\n",
              "      <td>55.907576</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>892.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.170000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>996.250000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>21.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>7.895800</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>1100.500000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>27.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>14.454200</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>1204.750000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>39.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>31.500000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>1309.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>76.000000</td>\n",
              "      <td>8.000000</td>\n",
              "      <td>9.000000</td>\n",
              "      <td>512.329200</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-80e2bf5d-9500-4c2e-9a92-b80f54e42ded')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-80e2bf5d-9500-4c2e-9a92-b80f54e42ded button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-80e2bf5d-9500-4c2e-9a92-b80f54e42ded');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 33
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Datatype of each column\n",
        "df.dtypes"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "FEeF69vfx7bf",
        "outputId": "0743de82-39a4-4d13-d2db-cce5b898fd5d"
      },
      "execution_count": 37,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "PassengerId      int64\n",
              "Survived         int64\n",
              "Pclass           int64\n",
              "Name            object\n",
              "Sex             object\n",
              "Age            float64\n",
              "SibSp            int64\n",
              "Parch            int64\n",
              "Ticket          object\n",
              "Fare           float64\n",
              "Cabin           object\n",
              "Embarked        object\n",
              "dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 37
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "3. Perform the following operations using Python on the data set\n",
        "House_Price Prediction dataset. Compute standard deviation, variance and\n",
        "percentiles using separate commands, for each feature. Create a histogram\n",
        "for each feature in the dataset to illustrate the feature distributions."
      ],
      "metadata": {
        "id": "tJuN1LqpyyCd"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "houseDF = pd.read_csv(\"house_price.csv\")\n",
        "houseDF"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 488
        },
        "id": "rKXrLRUu3N_l",
        "outputId": "e85487f7-097e-4266-dd24-6ff686eaf126"
      },
      "execution_count": 39,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     Taxi_dist  Market_dist  Hospital_dist  Carpet_area  Builtup_area  \\\n",
              "0       9796.0       5250.0        10703.0       1659.0        1961.0   \n",
              "1       8294.0       8186.0        12694.0       1461.0        1752.0   \n",
              "2      11001.0      14399.0        16991.0       1340.0        1609.0   \n",
              "3       8301.0      11188.0        12289.0       1451.0        1748.0   \n",
              "4      10510.0      12629.0        13921.0       1770.0        2111.0   \n",
              "..         ...          ...            ...          ...           ...   \n",
              "927    12176.0       8518.0        15673.0       1582.0        1910.0   \n",
              "928     7214.0       8717.0        10553.0       1387.0        1663.0   \n",
              "929     7423.0      11708.0        13220.0       1200.0        1436.0   \n",
              "930    15082.0      14700.0        19617.0       1299.0        1560.0   \n",
              "931     9297.0      12537.0        14418.0       1174.0        1429.0   \n",
              "\n",
              "     Parking_type City_type  Rainfall  Price_house  \n",
              "0            Open     CAT B       530      6649000  \n",
              "1    Not Provided     CAT B       210      3982000  \n",
              "2    Not Provided     CAT A       720      5401000  \n",
              "3         Covered     CAT B       620      5373000  \n",
              "4    Not Provided     CAT B       450      4662000  \n",
              "..            ...       ...       ...          ...  \n",
              "927       Covered     CAT C      1080      6639000  \n",
              "928          Open     CAT A       850      8208000  \n",
              "929          Open     CAT A      1060      7644000  \n",
              "930          Open     CAT B       770      9661000  \n",
              "931       Covered     CAT C      1110      5434000  \n",
              "\n",
              "[932 rows x 9 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-98bc45f6-aacd-4d3a-8a23-36f2ec03e6bc\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Taxi_dist</th>\n",
              "      <th>Market_dist</th>\n",
              "      <th>Hospital_dist</th>\n",
              "      <th>Carpet_area</th>\n",
              "      <th>Builtup_area</th>\n",
              "      <th>Parking_type</th>\n",
              "      <th>City_type</th>\n",
              "      <th>Rainfall</th>\n",
              "      <th>Price_house</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>9796.0</td>\n",
              "      <td>5250.0</td>\n",
              "      <td>10703.0</td>\n",
              "      <td>1659.0</td>\n",
              "      <td>1961.0</td>\n",
              "      <td>Open</td>\n",
              "      <td>CAT B</td>\n",
              "      <td>530</td>\n",
              "      <td>6649000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8294.0</td>\n",
              "      <td>8186.0</td>\n",
              "      <td>12694.0</td>\n",
              "      <td>1461.0</td>\n",
              "      <td>1752.0</td>\n",
              "      <td>Not Provided</td>\n",
              "      <td>CAT B</td>\n",
              "      <td>210</td>\n",
              "      <td>3982000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>11001.0</td>\n",
              "      <td>14399.0</td>\n",
              "      <td>16991.0</td>\n",
              "      <td>1340.0</td>\n",
              "      <td>1609.0</td>\n",
              "      <td>Not Provided</td>\n",
              "      <td>CAT A</td>\n",
              "      <td>720</td>\n",
              "      <td>5401000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>8301.0</td>\n",
              "      <td>11188.0</td>\n",
              "      <td>12289.0</td>\n",
              "      <td>1451.0</td>\n",
              "      <td>1748.0</td>\n",
              "      <td>Covered</td>\n",
              "      <td>CAT B</td>\n",
              "      <td>620</td>\n",
              "      <td>5373000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>10510.0</td>\n",
              "      <td>12629.0</td>\n",
              "      <td>13921.0</td>\n",
              "      <td>1770.0</td>\n",
              "      <td>2111.0</td>\n",
              "      <td>Not Provided</td>\n",
              "      <td>CAT B</td>\n",
              "      <td>450</td>\n",
              "      <td>4662000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>927</th>\n",
              "      <td>12176.0</td>\n",
              "      <td>8518.0</td>\n",
              "      <td>15673.0</td>\n",
              "      <td>1582.0</td>\n",
              "      <td>1910.0</td>\n",
              "      <td>Covered</td>\n",
              "      <td>CAT C</td>\n",
              "      <td>1080</td>\n",
              "      <td>6639000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>928</th>\n",
              "      <td>7214.0</td>\n",
              "      <td>8717.0</td>\n",
              "      <td>10553.0</td>\n",
              "      <td>1387.0</td>\n",
              "      <td>1663.0</td>\n",
              "      <td>Open</td>\n",
              "      <td>CAT A</td>\n",
              "      <td>850</td>\n",
              "      <td>8208000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>929</th>\n",
              "      <td>7423.0</td>\n",
              "      <td>11708.0</td>\n",
              "      <td>13220.0</td>\n",
              "      <td>1200.0</td>\n",
              "      <td>1436.0</td>\n",
              "      <td>Open</td>\n",
              "      <td>CAT A</td>\n",
              "      <td>1060</td>\n",
              "      <td>7644000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>930</th>\n",
              "      <td>15082.0</td>\n",
              "      <td>14700.0</td>\n",
              "      <td>19617.0</td>\n",
              "      <td>1299.0</td>\n",
              "      <td>1560.0</td>\n",
              "      <td>Open</td>\n",
              "      <td>CAT B</td>\n",
              "      <td>770</td>\n",
              "      <td>9661000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>931</th>\n",
              "      <td>9297.0</td>\n",
              "      <td>12537.0</td>\n",
              "      <td>14418.0</td>\n",
              "      <td>1174.0</td>\n",
              "      <td>1429.0</td>\n",
              "      <td>Covered</td>\n",
              "      <td>CAT C</td>\n",
              "      <td>1110</td>\n",
              "      <td>5434000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>932 rows × 9 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-98bc45f6-aacd-4d3a-8a23-36f2ec03e6bc')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-98bc45f6-aacd-4d3a-8a23-36f2ec03e6bc button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-98bc45f6-aacd-4d3a-8a23-36f2ec03e6bc');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 39
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Standard Deviation\n",
        "for i in houseDF.loc[:]:\n",
        "  if houseDF[i].dtype == 'float64' or houseDF[i].dtype == 'int64':\n",
        "    print(f'Standard deviation in {i}: {np.std(houseDF[i])}')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7Ognq4dG4IMz",
        "outputId": "ac59ca99-03c2-4f27-83b3-c3ea15a70b0d"
      },
      "execution_count": 51,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Standard deviation in Taxi_dist: 2560.5907302636597\n",
            "Standard deviation in Market_dist: 2542.536142910836\n",
            "Standard deviation in Hospital_dist: 2585.0667140867204\n",
            "Standard deviation in Carpet_area: 790.5415300680336\n",
            "Standard deviation in Builtup_area: 467.90412038766834\n",
            "Standard deviation in Rainfall: 265.404354078051\n",
            "Standard deviation in Price_house: 5022667.167960313\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Variance\n",
        "for i in houseDF.loc[:]:\n",
        "  if houseDF[i].dtype == 'float64' or houseDF[i].dtype == 'int64':\n",
        "    print(f'Variance in house {i}: {np.var(houseDF[i])}')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "4jQw7jjD4p5U",
        "outputId": "4c8d1201-ebec-42a6-ec82-af15eda064bb"
      },
      "execution_count": 53,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Variance in house Taxi_dist: 6556624.887912181\n",
            "Variance in house Market_dist: 6464490.038007911\n",
            "Variance in house Hospital_dist: 6682569.916279114\n",
            "Variance in house Carpet_area: 624955.9107623077\n",
            "Variance in house Builtup_area: 218934.26587575764\n",
            "Variance in house Rainfall: 70439.47116358747\n",
            "Variance in house Price_house: 25227185480106.47\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Percentile\n",
        "for i in houseDF.loc[:]:\n",
        "  if houseDF[i].dtype == 'int64':\n",
        "    print(f'Percentile of house {i}: {np.percentile(houseDF[i], [ random.randint(0,100) for i in range(10) ])}')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "mxibGknP7iBe",
        "outputId": "22f8ce10-4dfc-435d-ed2e-bf932eb531bf"
      },
      "execution_count": 57,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Percentile of house Rainfall: [ 970. 1090.  620. 1120.  480.  780. 1090.  430.  430. 1020.]\n",
            "Percentile of house Price_house: [2.61174e+06 4.43151e+06 8.29463e+06 7.18725e+06 5.02753e+06 8.05152e+06\n",
            " 1.50000e+08 3.41576e+06 4.49064e+06 3.86416e+06]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Histograms\n",
        "for i in houseDF.loc[:]:\n",
        "  if houseDF[i].dtype == 'float64' or houseDF[i].dtype == 'int64':\n",
        "    plt.hist(houseDF[i])\n",
        "    plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "O3Ug-I_e8g7D",
        "outputId": "99172da6-31af-4fee-bff9-c1c1ef5d4300"
      },
      "execution_count": 60,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAXcAAAD4CAYAAAAXUaZHAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAQTElEQVR4nO3dX4xc5XnH8e9TDFwAKSbeWq4xXUBOJXNRQ1cuUkhEixrAtDVpJQSqEpcgOW1Bgja9MEFquEGCpCQVaktkBMJUBHAKCEvQFmKhoKjiz9p1jDFxWMAIW8Z2IA1UqWhtnl7Ma3G83tnZ+bM7y6vvRxrNmff8e+adM789c86Z2chMJEl1+ZVhFyBJGjzDXZIqZLhLUoUMd0mqkOEuSRVaMOwCABYtWpSjo6PDLkOSPlG2bt36s8wcmWrcvAj30dFRxsfHh12GJH2iRMRb7cZ5WEaSKmS4S1KFDHdJqpDhLkkVMtwlqUKGuyRVyHCXpAoZ7pJUIcNdkio0L76hKs1no+ufHMp699x+xVDWqzq45y5JFTLcJalChrskVchwl6QKGe6SVCHDXZIqZLhLUoUMd0mqkF9i0ifCsL5IJH1SuecuSRUy3CWpQoa7JFWoY7hHxLKIeDYidkXEKxFxY2m/NSL2RcT2clvdmOfmiJiIiN0RcelsPgFJ0vFmckL1MPC1zNwWEacBWyPimTLuO5n5d82JI2IFcDVwHvDrwA8i4jOZeWSQhUuS2uu4556Z+zNzWxn+AHgVWDrNLGuAhzPzw8x8E5gAVg2iWEnSzHR1zD0iRoHzgRdK0w0RsSMi7ouIhaVtKfB2Y7a9TPHHICLWRcR4RIwfOnSo68IlSe3NONwj4lTgUeCmzHwfuBs4F1gJ7Afu7GbFmbkhM8cyc2xkZKSbWSVJHcwo3CPiRFrB/mBmPgaQmQcy80hmfgTcw8eHXvYByxqzn1naJElzZCZXywRwL/BqZn670b6kMdkXgZ1leDNwdUScHBFnA8uBFwdXsiSpk5lcLfNZ4EvAyxGxvbR9HbgmIlYCCewBvgqQma9ExCZgF60rba73ShlJmlsdwz0zfwTEFKOemmae24Db+qhLktQHv6EqSRUy3CWpQoa7JFXIcJekChnuklQhw12SKmS4S1KFDHdJqpDhLkkVMtwlqUKGuyRVyHCXpAoZ7pJUIcNdkipkuEtShQx3SaqQ4S5JFTLcJalChrskVchwl6QKGe6SVCHDXZIqZLhLUoUMd0mqkOEuSRUy3CWpQoa7JFXIcJekChnuklShjuEeEcsi4tmI2BURr0TEjaX9jIh4JiJeK/cLS3tExF0RMREROyLigtl+EpKkY81kz/0w8LXMXAFcCFwfESuA9cCWzFwObCmPAS4HlpfbOuDugVctSZpWx3DPzP2Zua0MfwC8CiwF1gAby2QbgSvL8BrggWx5Hjg9IpYMvHJJUltdHXOPiFHgfOAFYHFm7i+j3gEWl+GlwNuN2faWtsnLWhcR4xExfujQoS7LliRNZ8bhHhGnAo8CN2Xm+81xmZlAdrPizNyQmWOZOTYyMtLNrJKkDmYU7hFxIq1gfzAzHyvNB44ebin3B0v7PmBZY/YzS5skaY7M5GqZAO4FXs3MbzdGbQbWluG1wBON9i+Xq2YuBH7ROHwjSZoDC2YwzWeBLwEvR8T20vZ14HZgU0RcB7wFXFXGPQWsBiaAXwLXDrRiSVJHHcM9M38ERJvRl0wxfQLX91mXJKkPfkNVkipkuEtShQx3SaqQ4S5JFTLcJalChrskVchwl6QKGe6SVCHDXZIqZLhLUoUMd0mqkOEuSRUy3CWpQoa7JFXIcJekChnuklQhw12SKmS4S1KFDHdJqpDhLkkVMtwlqUKGuyRVyHCXpAoZ7pJUIcNdkipkuEtShQx3SarQgmEXoE+W0fVPDrsESTPgnrskVahjuEfEfRFxMCJ2NtpujYh9EbG93FY3xt0cERMRsTsiLp2twiVJ7c1kz/1+4LIp2r+TmSvL7SmAiFgBXA2cV+b5p4g4YVDFSpJmpmO4Z+ZzwHszXN4a4OHM/DAz3wQmgFV91CdJ6kE/x9xviIgd5bDNwtK2FHi7Mc3e0naciFgXEeMRMX7o0KE+ypAkTdZruN8NnAusBPYDd3a7gMzckJljmTk2MjLSYxmSpKn0FO6ZeSAzj2TmR8A9fHzoZR+wrDHpmaVNkjSHegr3iFjSePhF4OiVNJuBqyPi5Ig4G1gOvNhfiZKkbnX8ElNEPARcDCyKiL3AN4CLI2IlkMAe4KsAmflKRGwCdgGHgesz88jslC5JaqdjuGfmNVM03zvN9LcBt/VTlCSpP35DVZIqZLhLUoUMd0mqkL8KKc1Tw/oFzj23XzGU9Wqw3HOXpAoZ7pJUIcNdkipkuEtShQx3SaqQ4S5JFTLcJalChrskVchwl6QKGe6SVCHDXZIqZLhLUoUMd0mqkOEuSRUy3CWpQoa7JFXIcJekChnuklQhw12SKmS4S1KFDHdJqpDhLkkVMtwlqUKGuyRVyHCXpAp1DPeIuC8iDkbEzkbbGRHxTES8Vu4XlvaIiLsiYiIidkTEBbNZvCRpajPZc78fuGxS23pgS2YuB7aUxwCXA8vLbR1w92DKlCR1o2O4Z+ZzwHuTmtcAG8vwRuDKRvsD2fI8cHpELBlUsZKkmen1mPvizNxfht8BFpfhpcDbjen2lrbjRMS6iBiPiPFDhw71WIYkaSp9n1DNzASyh/k2ZOZYZo6NjIz0W4YkqaHXcD9w9HBLuT9Y2vcByxrTnVnaJElzqNdw3wysLcNrgSca7V8uV81cCPyicfhGkjRHFnSaICIeAi4GFkXEXuAbwO3Apoi4DngLuKpM/hSwGpgAfglcOws1S5I66BjumXlNm1GXTDFtAtf3W5QkqT9+Q1WSKmS4S1KFDHdJqpDhLkkVMtwlqUKGuyRVyHCXpAoZ7pJUIcNdkipkuEtShQx3SaqQ4S5JFTLcJalChrskVchwl6QKGe6SVCHDXZIqZLhLUoUMd0mqkOEuSRUy3CWpQoa7JFXIcJekChnuklQhw12SKmS4S1KFFgy7AHVvdP2Twy5B0jznnrskVchwl6QK9XVYJiL2AB8AR4DDmTkWEWcAjwCjwB7gqsz8eX9lSpK6MYg999/NzJWZOVYerwe2ZOZyYEt5LEmaQ7NxWGYNsLEMbwSunIV1SJKm0W+4J/B0RGyNiHWlbXFm7i/D7wCL+1yHJKlL/V4KeVFm7ouIXwOeiYifNEdmZkZETjVj+WOwDuCss87qswxJUlNfe+6Zua/cHwQeB1YBByJiCUC5P9hm3g2ZOZaZYyMjI/2UIUmapOdwj4hTIuK0o8PAF4CdwGZgbZlsLfBEv0VKkrrTz2GZxcDjEXF0Od/LzH+LiJeATRFxHfAWcFX/ZUqSutFzuGfmG8BvTdH+LnBJP0VJkvrjN1QlqUKGuyRVyHCXpAoZ7pJUIcNdkipkuEtShQx3SaqQ4S5JFfJ/qEo6xjD/R++e268Y2rpr4567JFXIcJekChnuklQhw12SKmS4S1KFDHdJqpDhLkkVMtwlqUKGuyRVyHCXpAoZ7pJUIcNdkipkuEtShQx3SaqQ4S5JFTLcJalChrskVchwl6QK+W/2+jDMf0cmSdNxz12SKuSeu6R5Y1ifhmv8x9yztuceEZdFxO6ImIiI9bO1HknS8WZlzz0iTgD+Efh9YC/wUkRszsxdg16Xx70l9WuYOTJbnxpma899FTCRmW9k5v8CDwNrZmldkqRJZuuY+1Lg7cbjvcDvNCeIiHXAuvLwvyNid2P0IuBns1RbP6yrO9bVHevqThV1xR19res32o0Y2gnVzNwAbJhqXESMZ+bYHJfUkXV1x7q6Y13dsa7pzdZhmX3AssbjM0ubJGkOzFa4vwQsj4izI+Ik4Gpg8yytS5I0yawclsnMwxFxA/DvwAnAfZn5SheLmPJwzTxgXd2xru5YV3esaxqRmcOuQZI0YP78gCRVyHCXpBpl5pzcaF098yywC3gFuLG030rrSprt5ba6Mc/NwASwG7i00X5ZaZsA1g+gtj3Ay2X946XtDOAZ4LVyv7C0B3BXWfcO4ILGctaW6V8D1vZRz282+mM78D5w07D6CrgPOAjsbLQNrH+A3y79P1HmjR5r+hbwk7Lex4HTS/so8D+Nfvtup3W3e3491jWw1w04G3ihtD8CnNRHXY80atoDbB9Cf7XLhWFvX+3qGvo2NuP37SAX1qGzlhx9IYDTgJ8CK8qG/zdTTL8C+DFwctmgX6d1cvaEMnwOcFKZZkWfte0BFk1q++bRNxWwHrijDK8G/rVsZBcCLzReqDfK/cIy3PeLVZ7vO7S+rDCUvgI+D1zAscEwsP4BXizTRpn38h5r+gKwoAzf0ahptDndpOVMue52z6/Hugb2ugGbgKvL8HeBv+i1rknj7wT+dgj91S4Xhr19tatr6NvYTG9zdlgmM/dn5rYy/AHwKq1vsrazBng4Mz/MzDdp/dVbxdz9tMEaYGMZ3ghc2Wh/IFueB06PiCXApcAzmfleZv6c1l/iywZQxyXA65n5VodaZ62vMvM54L0p1tl3/5Rxn8rM57O1lT/QWFZXNWXm05l5uDx8ntb3K9rqsO52z6/ruqbR1esWEQH8HvAvg6yrLPcq4KHpljFL/dUuF4a9fU1Z13zYxmZqKMfcI2IUOJ/Wx0uAGyJiR0TcFxELS9tUP2GwdJr2fiTwdERsLT+LALA4M/eX4XeAxUOoC1rfEWi+6YbdV0cNqn+WluFB1/gVWntJR50dEf8ZET+MiM81am237nbPr1eDeN0+DfxXI1wG1VefAw5k5muNtjnvr0m5MG+2ryny6qj5to0dY87DPSJOBR4FbsrM94G7gXOBlcB+Wh8P59pFmXkBcDlwfUR8vjmy/MWd82tGyxfA/gj4fmmaD311nGH1TzsRcQtwGHiwNO0HzsrM84G/Br4XEZ+a6fIG8Pzm5evWcA3H7kDMeX9NkQt9LW9Q2tU1D7ex48xpuEfEibQ66sHMfAwgMw9k5pHM/Ai4h9ZHUmj/EwYD/2mDzNxX7g/SOkmyCjhQPlId/Wh1cK7rovXHZltmHij1Db2vGgbVP/s49qNtXzVGxJ8BfwD8aXnDUA57vFuGt9I6nv2ZDutu9/y6NsDX7V1ahyEWTGrvWVnWH9M6uXq03jntr6lyYZrlzdn21aauebmNTWm6A/KDvNE6mfAA8PeT2pc0hv+K1jFIgPM49mTTG7RONC0ow2fz8cmm8/qo6xTgtMbwf9A6Vv4tjj3Z8c0yfAXHntB5MT8+ofMmrZM5C8vwGX322cPAtfOhr5h0wmiQ/cPxJ5xW91jTZbSubhiZNN0IcEIZPofWm2vadbd7fj3WNbDXjdanuOYJ1b/sta5Gn/1wWP1F+1wY6vY1TV3zYhubUd8OcmEdOusiWh87dtC4JAz4Z1qXCe2g9fszzTfCLbT+Au6mcYa7zPfTMu6WPus6p7x5fkzrkqdbSvungS20LlP6QeOFClr/iOT1UvdYY1lfoXVSbIJGKPdY1ym09tR+tdE2lL6i9ZF9P/B/tI4ZXjfI/gHGgJ1lnn9gZpeqTVXTBK3jrsdcjgb8SXlttwPbgD/stO52z6/Hugb2upXt9cXyXL8PnNxrXaX9fuDPJ007l/3VLheGvX21q2vo29hMb/78gCRVyG+oSlKFDHdJqpDhLkkVMtwlqUKGuyRVyHCXpAoZ7pJUof8HxF8fDW7Rt1UAAAAASUVORK5CYII=\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "12.Use Iris flower dataset and perform following :\n",
        "1. Create a box plot for each feature in the dataset.\n",
        "2. Identify and discuss distributions and identify outliers from them."
      ],
      "metadata": {
        "id": "ONVHvPJ792fI"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "iris = pd.read_csv(\"IRIS.csv\")\n",
        "iris"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "IS2vCXyT94fv",
        "outputId": "3305786e-e0a4-4fed-d497-a01c94ba913f"
      },
      "execution_count": 61,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     sepal_length  sepal_width  petal_length  petal_width         species\n",
              "0             5.1          3.5           1.4          0.2     Iris-setosa\n",
              "1             4.9          3.0           1.4          0.2     Iris-setosa\n",
              "2             4.7          3.2           1.3          0.2     Iris-setosa\n",
              "3             4.6          3.1           1.5          0.2     Iris-setosa\n",
              "4             5.0          3.6           1.4          0.2     Iris-setosa\n",
              "..            ...          ...           ...          ...             ...\n",
              "145           6.7          3.0           5.2          2.3  Iris-virginica\n",
              "146           6.3          2.5           5.0          1.9  Iris-virginica\n",
              "147           6.5          3.0           5.2          2.0  Iris-virginica\n",
              "148           6.2          3.4           5.4          2.3  Iris-virginica\n",
              "149           5.9          3.0           5.1          1.8  Iris-virginica\n",
              "\n",
              "[150 rows x 5 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ffab9792-2dfb-4c6c-ae3b-51358d70dbbd\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>sepal_length</th>\n",
              "      <th>sepal_width</th>\n",
              "      <th>petal_length</th>\n",
              "      <th>petal_width</th>\n",
              "      <th>species</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>5.1</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>Iris-setosa</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>4.9</td>\n",
              "      <td>3.0</td>\n",
              "      <td>1.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>Iris-setosa</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>4.7</td>\n",
              "      <td>3.2</td>\n",
              "      <td>1.3</td>\n",
              "      <td>0.2</td>\n",
              "      <td>Iris-setosa</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4.6</td>\n",
              "      <td>3.1</td>\n",
              "      <td>1.5</td>\n",
              "      <td>0.2</td>\n",
              "      <td>Iris-setosa</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5.0</td>\n",
              "      <td>3.6</td>\n",
              "      <td>1.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>Iris-setosa</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>145</th>\n",
              "      <td>6.7</td>\n",
              "      <td>3.0</td>\n",
              "      <td>5.2</td>\n",
              "      <td>2.3</td>\n",
              "      <td>Iris-virginica</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>146</th>\n",
              "      <td>6.3</td>\n",
              "      <td>2.5</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.9</td>\n",
              "      <td>Iris-virginica</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>147</th>\n",
              "      <td>6.5</td>\n",
              "      <td>3.0</td>\n",
              "      <td>5.2</td>\n",
              "      <td>2.0</td>\n",
              "      <td>Iris-virginica</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>148</th>\n",
              "      <td>6.2</td>\n",
              "      <td>3.4</td>\n",
              "      <td>5.4</td>\n",
              "      <td>2.3</td>\n",
              "      <td>Iris-virginica</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>149</th>\n",
              "      <td>5.9</td>\n",
              "      <td>3.0</td>\n",
              "      <td>5.1</td>\n",
              "      <td>1.8</td>\n",
              "      <td>Iris-virginica</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>150 rows × 5 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ffab9792-2dfb-4c6c-ae3b-51358d70dbbd')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-ffab9792-2dfb-4c6c-ae3b-51358d70dbbd button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-ffab9792-2dfb-4c6c-ae3b-51358d70dbbd');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 61
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "for i in iris.loc[:]:\n",
        "  if iris[i].dtype == 'float64':\n",
        "    plt.boxplot(iris[i])\n",
        "    plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "KuvmJiJf_JGI",
        "outputId": "5dab4aa1-df3f-49c5-a4fb-82077f806308"
      },
      "execution_count": 69,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(np.where(iris['sepal_width'] > 4))\n",
        "print(np.where(iris['sepal_width'] < 2.2))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "lvyxbZOtDnw1",
        "outputId": "5f79fadc-3f61-4e59-e3a7-1ca800fa1cbe"
      },
      "execution_count": 76,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(array([15, 32, 33]),)\n",
            "(array([60]),)\n"
          ]
        }
      ]
    }
  ]
}